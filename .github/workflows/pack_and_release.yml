name: Build and Release NuGet package

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish:
    name: build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore

      - id: get-version
        run: |
          # remove the `refs/tags/v`
          version=$(echo ${{ github.ref }}| cut -d'v' -f 2)
          # Ensure file is written in UTF8
          echo "::set-output name=version::$version"
      - name: Create NuGet package  
        run: dotnet pack -v normal -c Release --include-source -p:Version=${{steps.get-version.outputs.version}} -o nupkg RosNet/RosNet.csproj

      - name: Push package to NuGet
        run: dotnet nuget push nupkg/RosNet.${{steps.get-version.outputs.version}}.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate

      # Create the release:  https://github.com/actions/create-release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.get-version.outputs.version}}
          release_name: RosNet ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false

      # Release new DocFX online documentation
      - name: Build DocFX documentation
        uses: nikeee/docfx-action@v1.0.0
        with:
          args: DocFX/docfx.json
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
